{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ObjectId": {
				"type": "string",
				"description": "A class representation of the BSON ObjectId type."
			},
			"Product": {
				"properties": {
					"_id": {
						"$ref": "#/components/schemas/ObjectId"
					},
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"vendor": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"categories": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"description",
					"vendor",
					"image",
					"price",
					"categories"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ValidationErrorDetails": {
				"properties": {},
				"type": "object",
				"additionalProperties": {
					"properties": {
						"message": {}
					},
					"required": [
						"message"
					],
					"type": "object"
				}
			},
			"ValidateError": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string",
						"default": ""
					},
					"stack": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double",
						"default": 400
					},
					"details": {
						"$ref": "#/components/schemas/ValidationErrorDetails"
					}
				},
				"required": [
					"name",
					"message",
					"status",
					"details"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "senior-backend-developer-node",
		"version": "1.0.0",
		"description": "Senior Developer Node.js Typescript Express API",
		"contact": {
			"name": "victor.barreratoledo@gmail.com"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/v1/products": {
			"get": {
				"operationId": "ListProducts",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"products": {
											"items": {
												"$ref": "#/components/schemas/Product"
											},
											"type": "array"
										}
									},
									"required": [
										"products"
									],
									"type": "object"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Get"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "offset",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						},
						"example": 0
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": 20
					}
				]
			},
			"post": {
				"operationId": "InsertProducts",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateError"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Validation failed",
											"name": "Product Schema Validation Failed",
											"status": 422,
											"details": {
												"body.$0.name": {
													"message": "'name' is required"
												},
												"body.$0.description": {
													"message": "'description' is required"
												},
												"body.$0.vendor": {
													"message": "'vendor' is required"
												},
												"body.$0.image": {
													"message": "'image' is required"
												},
												"body.$0.price": {
													"message": "'price' is required"
												},
												"body.$0.categories": {
													"message": "'categories' is required"
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Post",
					"Insert",
					"Create"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/Product"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/api/v1/products/{productID}": {
			"get": {
				"operationId": "ProductDetail",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Get"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "productID",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateProduct",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			},
			"delete": {
				"operationId": "DeleteProduct",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/v1/products/search": {
			"post": {
				"operationId": "SearchProducts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/v1/products/find": {
			"post": {
				"operationId": "FindProducts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}